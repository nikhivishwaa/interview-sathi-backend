name: Docker Compose Test

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  docker-test:
    runs-on: ubuntu-latest
    environment: Dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets
        run: |
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env
          echo "WORKER_URL=${{ secrets.WORKER_URL }}" >> .env
          echo "CORS_ALLOW_ALL_ORIGINS=${{ secrets.CORS_ALLOW_ALL_ORIGINS }}" >> .env
          echo "X_FRAME_OPTIONS=${{ secrets.X_FRAME_OPTIONS }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "LLM_MODEL_NAME=${{ secrets.LLM_MODEL_NAME }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
          
      - name: Build and start containers
        run: docker compose -f docker-compose-dev.yml up -d --build

      - name: Wait for services to be ready
        run: |
          echo "‚è≥ Waiting for services..."
          sleep 25
          docker compose ps

      - name: Run migrations
        run: docker compose exec -T django_app python manage.py migrate --noinput

      - name: Test signup API
        run: |
          echo "üîë Testing signup API..."
          RESPONSE=$(curl -s -X POST http://localhost/users/signup/ \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.USER_EMAIL }}\", \"phone\": \"${{ secrets.USER_PHONE }}\",\"first_name\": \"${{ secrets.USER_FIRST_NAME }}\", \"password\": \"${{ secrets.USER_PASSWORD }}\"}")
          echo "Signup response: $RESPONSE"

      - name: Test login API
        run: |
          echo "üîë Testing login API..."
          RESPONSE=$(curl -s -X POST http://localhost/users/login/ \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.USER_EMAIL }}\", \"password\": \"${{ secrets.USER_PASSWORD }}\"}")
          echo "Login response: $RESPONSE"

      - name: Print health if login works
        run: |
          echo "üíö Checking health endpoint..."
          curl -s http://localhost/health/ || echo "‚ùå Health endpoint not available"
