# Generated by Django 5.1.7 on 2025-09-07 07:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=10)),
                ('statement', models.TextField()),
                ('code', models.TextField()),
                ('constraints', models.JSONField(blank=True, default=list)),
                ('time_complexity', models.TextField(help_text='O(n)', max_length=12)),
                ('space_complexity', models.TextField(help_text='O(n)', max_length=12)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=10)),
                ('examples', models.JSONField(default=list, help_text="Example: {'input': 'n=5 arr[n]=[1, 2, 3, 4, 5]', 'output': '12', 'explanation': 'taking 5 values as input and summing up last 3 values'}")),
                ('tags', models.JSONField(blank=True, default=list)),
                ('companies', models.JSONField(blank=True, default=list)),
                ('score', models.FloatField(default=100.0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problem_statement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coding Question',
                'verbose_name_plural': 'Coding Questions',
                'db_table': 'coding_questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.TextField()),
                ('expected_output', models.TextField()),
                ('score', models.FloatField(default=100)),
                ('is_hidden', models.BooleanField(default=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testcases', to='coding.codingquestion')),
            ],
            options={
                'verbose_name': 'Test Case',
                'verbose_name_plural': 'Test Cases',
                'db_table': 'test_cases',
                'ordering': ['question'],
            },
        ),
        migrations.AddIndex(
            model_name='codingquestion',
            index=models.Index(fields=['difficulty'], name='coding_ques_difficu_5a10d2_idx'),
        ),
        migrations.AddIndex(
            model_name='codingquestion',
            index=models.Index(fields=['title'], name='coding_ques_title_23fffe_idx'),
        ),
        migrations.AddIndex(
            model_name='testcase',
            index=models.Index(fields=['question', 'is_hidden'], name='test_cases_questio_b9d397_idx'),
        ),
    ]
